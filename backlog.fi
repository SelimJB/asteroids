PRIO
	* Finaliser systeme de configuration
		- Mapper tt mes variables présentes dans logger.h
	* Test des fuites mémoires
	Code qualité
		* Pouvoir tester la qualité d'un NN en le laissant jouer jusqu'à ce que le nombre de mort par minutes se stabilise


MOINS PRIO
	* Avoir un logger cool et un bon systeme de logs
	* Organiser / documenter mes petits projets C++ :
		- Scripting pythons / C++
		- Gestion configuration
	* Tester l'apprentissage automatique de mon NN avec une bibliotheque tierce
	Scripts python
		NeuralNetwork.py
			* Revoir mes fonctions get_output dans neural network.py, les mettres dans ia_ship plutot peut etre
			* Pouvoir configurer l'utilisation des fonctions d'activations pour les différentes couches

Machine learning
	* Comment bien détérminer mes seuils ? (faire des boites a moustaches pour choisir mes seuils)
	* Avoir un taux d'apprentissage qui évolue avec le temps
	* Pouvoir tester la qualité d'un NN en le laissant jouer jusqu'à ce que le nombre de mort par minutes se stabilise
	* Reflechir aux Inputs que je souhaiterais ajouter, en ajouter d'autres eventuellement
	* Noter dans un fichier la liste de tout mes inputs
	Analyse
		* Des fonctions d'analyse des fichiers inputs
		* Methodes génériques pour generer des graphs (refactor neuralnetwork_train.py)
		* TWEAKING : générer des graphs pour tt mes tweaks (faire apparaitre les tweaks utilisée sur le graph)
		Tests ML
			* Retester le modèle à 4 inputs
			* Retester le modèle à 2 inputs
			* Retester le modèle à 1 output




PROJET
	* ~~ CLEAN CODE C++
	* CLEAN CODE PYTHON
	* -- Traduction back log en anglais
	* Faire une documentation (.md)
	Performances 
		* Tracker et analyser les fuites mémoires
		* Libérer mes pointers de PyObjects

~~ GESTION DE PROJET ~~
	TODO - avoir une backlog par catégories comme ici et une autre backlog par priorité









FAIT
	* BUG :En mode scripting 
		* La croix ne marche pas 
		* Le jeu freez quand le focus est perdu
	* Améliorer la portion génératrice de PNG
		- Marquer les parametres utilisées : nom du modèle / nombre d'itérations / taille des iterations / inertie / apprentissage, / taille du jeu testé / Derniere moyenne
	* Define tasks and Keyboard shortcut for tasks : Clean Obj / Compile / Execut current python script / Launch game
	* OK Avoir un systeme de gestion de configuration
			- OK Mapper le systeme de gestion de configuration avec python
	* Utiliser d'autres fonctions d'activation	
	* Creer script de generation de NN
	* Ajouter un biais
		https://stackoverflow.com/questions/2480650/role-of-bias-in-neural-networks
	* Ajouter angle vaisseau
	* TESTER LE MODE 4 OUTPUTS
	* Correction de l'input vecteur entre ast et vaisseau
		- Passage de vecteur direction à vecteur position


IDEES 
	* Decrease learning rate over time
		https://www.kdnuggets.com/2017/11/estimating-optimal-learning-rate-deep-neural-network.html
		(article a ajouter à keep)
	* Avoir une mesure de l'évolution du reseau durant l'entrainement
		verifier le calcul du cout (check comment tt a été fait dans le bouquin, check les differents calculs de cout qui existent)
	
